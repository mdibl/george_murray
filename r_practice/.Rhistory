#combine
x <- c(74, 122, 235, 111, 292)
mean(x)
sum(x)/length(x)
head(x); tail(x)
head(x, 1)
#assigning variables
x <- 2
#combine
x <- c(74, 122, 235, 111, 292)
head(x, 3)
tail(x, 2)
x+x
sqrt(x)
x - mean(x)
#median
mean(x, trim=0.5)
median(x)
x
y<- c(TRUE, FALSE, TRUE, TRUE)
summary(x)
#combine
x <- c(74, 122, 235, 111, 292)
summary(y)
ls()
str(x)
install.packages("UsingR")
require("UsingR")
head(rivers)
data(rivers)
str(rivers)
tail(rivers)
#Cavendish data set.
require("HistData")
head(Cavendish)
str(Cavendish)
head(Cavendish&density2)
head(Cavendish$density2)
summary(Cavendish$density2)
1+2(3+4)
1+2*(3+4)
4^3 + 3^(2+1)
sqrt((4+3)*(2+1))
((1+2)/(3+4))^2
a<-2
b<-3
c<-4
d<-5
a*b*c*d
rivers
exec.pay
max(exec.pay)
mean(exec.pay, trim=0.1)
mean(exec.pay, trim=0.1) - mean(exec.pay)
mean(exec.pay)
orange
require("orange")
str(orange)
str(Orange)
Orange
mean(Orange$age)
max(Orange$circumference)
whale <- c(74, 122, 235, 111, 292, 111, 211, 133, 156, 79)
length(whale)
sum(whale)
sum(whale)/length(whale)
mean(whale)
mean(whale, trim=0.1)
whale - mean(whale)
whale^2 / length(whale)
sqrt(whale)
hip_cost <- c(10500, 45000, 74100, NA, 83500, 86000, 38200, NA, 44300, 12500, 55700, 43900, 71900, NA, 62000)
sum(hip_cost)
sum(hip_cost, na.rm = TRUE)
mean(hip_cost, na.rm = TRUE)
head(precip)
head(sort(precip, decreasing = TRUE))
head(names(precip))
test_scores <- c(Alice = 87, Bob = 72, Shirley = 99)
#or
test_scores <- setNames(c(87, 82, 99), c("Alice", "Bob", "Shirley"))
whale <- c(74, 122, 235, 111, 292, 111, 211, 133, 156, 79)
length(whale)
sum(whale)
sum(whale)/length(whale)
mean(whale)
mean(whale, trim=0.1)
whale - mean(whale)
whale^2 / length(whale)
sqrt(whale)
hip_cost <- c(10500, 45000, 74100, NA, 83500, 86000, 38200, NA, 44300, 12500, 55700, 43900, 71900, NA, 62000)
sum(hip_cost)
sum(hip_cost, na.rm = TRUE)
mean(hip_cost, na.rm = TRUE)
head(precip)
head(sort(precip, decreasing = TRUE))
head(names(precip))
test_scores <- c(Alice = 87, Bob = 72, Shirley = 99)
#or
test_scores <- setNames(c(87, 82, 99), c("Alice", "Bob", "Shirley"))
test_scores <- c(87, 782, 99)
names(test_scores) <- c("Alice", "Bob", "Shirley")
test_scores
#data vectors
x <- c(1, "two", "III")
x
x
str(x)
x
#how to coerce back and forth between numbers and characters
as.numeric("1")
as.character(1)
scan()
1:5
1:1000
1:100000
1:99000
1:length(whale)
0:(length(whale)-1)
seq(0, 100, by=10)
seq(0, 100, length.out=11)
seq(0, 100, length.out=14)
rep(5, times=10)
rep(1:3, times=4)
rep(c(1,2,3), times=c(3,2,1))
#indexes
whale
whale[1]
whale[2]
whale[11]
whale[c(1,3,5,7,9)]
#negative indexing - returns all but the specified element(s)
whale[-1]
precip[c("Seattle Tacoma", "New York")]
match(c("Seattle Tacoma", "New York"), names(precip))
#assignment through indexing
x <- c(1,2,3)
x[1] <- 11
x
x[2:3] <- c(12, 13)
x
x[6] <-6
x
x <- 1:10
x[] <- 1:3
x
n<-10
x[1 + 0:(n-1) %% length(x)]
c(class(1), class(pi), class(seq(1, 5, by=1)))
sqrt(2)*sqrt(2)
sqrt(2)*sqrt(2)-2
c("Lincoln", "said", "\Four score", "and seven years ago . . . \"")
c("Lincoln", "said", "\"Four score", "and seven years ago . . . \"")
c("Lincoln", "said", \"Four score", "and seven years ago . . . \"")
c("Lincoln", "said", "\"Four score", "and seven years ago . . . \"")
help(string)
??string
sprintf("X%s", 1:10)
sprintf("%8d", c(1, 12, 123, 1234, 12345))
sprintf("%2.6f", c(1, 12, 123, 1234, 12345))
sprintf("%8.5d", c(1, 12, 123, 1234, 12345))
sprintf("%8d", c(1, 12, 123, 1234, 12345))
sprintf("%2.6f", c(1, 12, 123, 1234, 12345))
past("X", 1:10, sep="")
paste("X", 1:10, sep="")
paste("The", "quick", "brown", "fox", ". . . ", sep=" ")
paste("The", "quick", "brown", "fox", ". . . ", sep="    ")
paste("The", "quick", "brown", "fox", ". . . ", sep="  x  ")
paste("The", "quick", "brown", "fox", ". . . ", sep=" ")
past(c("Four", "The"), c("Score", "quick"), c("and", "fox"), sep=" ")
paste(c("Four", "The"), c("Score", "quick"), c("and", "fox"), sep=" ")
sprintf("[ %s ]", out)
x <- c(one=1, two=2, three=3)
out <- paste(names(x), x, sep=":", collapse=", ")
sprintf("[%s]", out)
sprintf("[ %s ]", out)
x <- paste("X", rep(1:3, 4), sep="")
y <- factor(x)
y
levels(y) <- c(levels(y), "X4")
y[1] <- "X4"
y
levels(y) <- paste("label", 1:4, sep="")
y
y <- factor(state.name[1:5])
y
levels(y) <- c("South", "West", "West", "South", "West")
y
y <- factor(state.name)[1:5]
y
factor(y, levels=y)
r <- "red"; b <- "blue"; g <- "green"
factor(c(r,r,r,r,r,g,g,g,g,g,b,b,b,b,b))
gl(3, 5, labels=c("red", "green", "blue"))
m <- head(cars93)
require(lubridate)
current_time <- now()
class(current_time)
as.numeric(current_time)
month(current_time, label=TRUE)
x <- "15-Feb-2013 07:57:34"
y <- parse_date_time(x, "dbYHMS")
year(y)
now() - days(1)
now() - hours(24)
is.na(1)
is.numeric("one")
is.logical("false")
3 < pi
"one" ==1
sqrt(2) * sqrt(2) ==2
isTRUE(all.equal(sqrt(2) * sqrt(2), 2))
whale
whale > 100
whale == 111
whale < 100 | whale > 200
whale > 100 & whale < 200
any(whale > 300)
all(whale > 50)
which(whale < 100 | whale > 200)
292 %in% whale
any(292 == whale)
match(c(292, 293), whale)
sum(whale > 200)
whale[ whale > mean(whale)]
whale[whale < mean(whale)-sd(whale) | whale > mean(whale)+sd(whale)]
hip_cost
hip_cost[ !is.na(hip_cost)]
babies
x <- babies$dwt
#problems
p <- c(2, 3, 5, 7, 11, 13, 17, 19)
length(p)
gas <- (65311, 65624, 65908, 66219, 66499, 66821, 67145, 67447)
gas <- c(65311, 65624, 65908, 66219, 66499, 66821, 67145, 67447)
mean(gas)
mean(diff(gas))
x <- c(2, 5, 4, 10, 8)
sqrt(x)
x-6
(x-9^2)
seq(0, 100, by=10)
seq(a, length.out = 5)
seq("a", length.out = 5)
str(a)
rep(a, times=5)
rep("a", times=5)
seq(1, 99, by n+1)
seq(1:99, by=odd)
seq(1, 99, by=2)
rep(c(1, 2, 3), times=c(3,3,3))
rep(c(1,2,3), times=c(3,2,1))
seq(1, 5, by=1) + seq(1, 4, by=-1)
seq(1, 5, by=1) + seq(1, 4, by=1)
1:5
1:5 + 4:1
4:1
1:5:4:1
list<-c(1:5)
list
list + list[-1]
list : list
list[-1]
list[1:5, 4, 3, 2, 1]
list
list[2]
list[1:5]
list[1:5, 1]
c(1:5, 4:1)
#2.5
seq(2, 19, by=odd)
#2.5
seq(2, 19, by=prev)
#2.5
seq(2, 19, by=n-1)
#2.5
seq(2, 19, by=(n-1))
#2.6
rivers
(sum(rivers) - mean(rivers)) / length(rivers)
function(x){
sum(x)/length(x)
}
5
function(x) {
total <- sum(x)
n <- length(x)
total / n
}
our_mean(c(1,2,4,6,8,0))
our_mean <- function(x) {
sum(x)/length(x)
}
our_mean(c(1,2,4,6,8,0))
f <- mean((x^2)-(mean(x)^2))
x <- c(1:10)
f
wts <- c(38, 43, 48, 61, 47, 24, 29, 48, 59, 24, 40, 27)
wts <- c(38, 43, 48, 61, 47, 24, 29, 48, 59, 24, 40, 27)
sort(wts)
mean(wts)
devs <- wts - mean(wts)
mean(devs)
mean(wts, trim = 0.10)
#differences between mean and trimmed mean
mean(exec.pay)
require(exec.pay)
#differences between mean and trimmed mean
require(UsingR)
require(exec.pay)
Macdonell(HistData)
Macdonell
rivers
exec.pay
mean(exec.pay)
mean(exec.pay, trim=0.10)
w <- Macdonell$frequency / sum(Macdonell$frequency)
y <- Macdonell$height
sum(w*y)
median(wts)
n <- length(exec.pay); trim = 0.10
exec.pay
require(exec.pay)
Macdonell
wts <- c(38, 43, 48, 61, 47, 24, 29, 48, 59, 24, 40, 27)
sort(wts)
mean(wts)
devs <- wts - mean(wts)
mean(devs)
mean(wts, trim = 0.10)
#differences between mean and trimmed mean
exec.pay
mean(exec.pay)
mean(exec.pay, trim=0.10)
w <- Macdonell$frequency / sum(Macdonell$frequency)
y <- Macdonell$height
sum(w*y)
median(wts)
n <- length(exec.pay); trim = 0.10
exec.pay
require(exec.pay)
rivers
n <- length(rivers); trim = 0.10
lo <- 1 + floor(n * trim)
hi <- n + 1 - lo
median(sort(rivers)[lo:hi])
x <- 0:5
length(x)
mean(sort(x)[3:4])
median(x)
quantile(x, 0.25)
quantile(x, seq(0, 1, by = 0.2))
quantile(x)
fivenum(x)
income_percentiles
require(UsingR)
income_percentiles
income <- c("90"=110651, "95"=155193, "99"=366623, "99.5"=544792, "99.9"=1557090, "99.99"=7969900)
income
table(wts)
table(wts) == max(table(wts))
which(table(wts) == max(table(wts)))
as.numeric(names(which(table(wts) == max(table(wts))) ))
#minimum and maximum values
range(wts)
#distance between min and max
diff(range(wts))
var(wts)
sum( (wts - mean(wts))^2) / (length(wts)-1)
#variability
hip_cost
hip_cost <- c(10500, 45000, 74100, NA, 83500, 86000, 38200, NA, 44300, 12500, 55700, 43900, 71900, NA, 62000)
range(hip_cost, na.rm = TRUE)
sd(hip_cost, na.rm = TRUE)
#z-score describes size of a value relative to the size of other values in the same set
z_score <- function(x) (x - mean(x))/sd(x)
z_score(wts)
grades <- c(54, 50, 79, 79, 51, 69, 55, 62, 100, 80)
grades[z_score >= 1.28]
z_score_grades <- (grades - mean(grades))/sd(grades)
grades[z_score_grades >= 1.28]
mean(grades) + 1.28 * sd(grades)
grades <- c(54, 50, 79, 79, 51, 69, 55, 62, 100, 82)
z_score_grades <- (grades - mean(grades))/sd(grades)
grades[z_score_grades >= 1.28]
grades <- c(54, 50, 79, 79, 51, 69, 55, 62, 100, 85)
z_score_grades <- (grades - mean(grades))/sd(grades)
grades[z_score_grades >= 1.28]
grades <- c(54, 50, 79, 79, 51, 69, 55, 62, 100, 99)
z_score_grades <- (grades - mean(grades))/sd(grades)
grades[z_score_grades >= 1.28]
mean(grades) + 1.28 * sd(grades)
UsingR
require(UsingR)
require(exec.pay)
exec.pay
#computing a proportion
z <- (exec.pay - mean(exec.pay))/sd(exec.pay)
out <- abs(z) > 3
sum(out) / length(z)
#coefficient of variation
sd(exec.pay)/mean(exec.pay)
rivers
#interquartile range
median(rivers)
IQR(rivers)
IQR(rivers) / sd(rivers)
sort(rivers)
#median absolute deviation (mad)
mad(rivers)/sd(rivers)
kids.weight
(UsingR)
require(UsingR)
ht <- kid.weights$height
mad(ht)/sd(ht)
wts <- c(38, 43, 48, 61, 47, 24, 29, 48, 59, 24, 40, 27)
sort(wts)
mean(wts)
devs <- wts - mean(wts)
mean(devs)
mean(wts, trim = 0.10)
#differences between mean and trimmed mean
exec.pay
mean(exec.pay)
mean(exec.pay, trim=0.10)
w <- Macdonell$frequency / sum(Macdonell$frequency)
y <- Macdonell$height
sum(w*y)
median(wts)
n <- length(exec.pay); trim = 0.10
exec.pay
require(exec.pay)
rivers
n <- length(rivers); trim = 0.10
lo <- 1 + floor(n * trim)
hi <- n + 1 - lo
median(sort(rivers)[lo:hi])
x <- 0:5
length(x)
mean(sort(x)[3:4])
median(x)
quantile(x, 0.25)
quantile(x, seq(0, 1, by = 0.2))
quantile(x)
fivenum(x)
income_percentiles
require(UsingR)
income_percentiles
income <- c("90"=110651, "95"=155193, "99"=366623, "99.5"=544792, "99.9"=1557090, "99.99"=7969900)
income
table(wts)
table(wts) == max(table(wts))
which(table(wts) == max(table(wts)))
as.numeric(names(which(table(wts) == max(table(wts))) ))
#minimum and maximum values
range(wts)
#distance between min and max
diff(range(wts))
var(wts)
sum( (wts - mean(wts))^2) / (length(wts)-1)
#variability
hip_cost
hip_cost <- c(10500, 45000, 74100, NA, 83500, 86000, 38200, NA, 44300, 12500, 55700, 43900, 71900, NA, 62000)
range(hip_cost, na.rm = TRUE)
sd(hip_cost, na.rm = TRUE)
#z-score describes size of a value relative to the size of other values in the same set
z_score <- function(x) (x - mean(x))/sd(x)
z_score(wts)
#this reminds me of fold change in expression data
grades <- c(54, 50, 79, 79, 51, 69, 55, 62, 100, 99)
z_score_grades <- (grades - mean(grades))/sd(grades)
grades[z_score_grades >= 1.28]
mean(grades) + 1.28 * sd(grades)
require(UsingR)
require(exec.pay)
exec.pay
#computing a proportion
z <- (exec.pay - mean(exec.pay))/sd(exec.pay)
out <- abs(z) > 3
sum(out) / length(z)
#coefficient of variation
sd(exec.pay)/mean(exec.pay)
#interquartile range
median(rivers)
IQR(rivers)
IQR(rivers) / sd(rivers)
sort(rivers)
#median absolute deviation (mad)
mad(rivers)/sd(rivers)
kids.weight
(UsingR)
require(UsingR)
ht <- kid.weights$height
mad(ht)/sd(ht)
skew <- function(x) {
n <- length(x)
z <- (x - mean(x))/sd(x)
sum(z^3) / n
}
skew(exec.pay)
four_year_hts <- kid.weights[kid.weights$age %in% 48:59, "height"]
skew(four_year_hts)
kurtosis <- function(x) {
n <- length(x)
z <- (x - mean(x)) / sd(x)
sum(z^4)/n - 3
}
kurtosis(galton$parent)
stripchart(exec.pay)
stripchart(rivers)
stem(exec.pay)
stem(bumpers)
