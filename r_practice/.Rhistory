if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
version
version
version
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("GEOquery", version = "2.40.0")
BiocManager::install(c("GenomicRanges", "Organism.dplyr", "Biobase", "GEOquery", "limma","stringi"))
install.packages('Biobase', version = "2.30.0")
install.packages('GEOquery', version = "2.40.0")
install.packages("dplyr")
install.packages('limma', version = "3.26.8")
install.packages("stringi")
library('stringi')
library('limma')
library('dplyr')
library(Biobase)
library(GEOquery)
library(limma)
gset <- getGEO("GSE70422", GSEMatrix =TRUE, AnnotGPL=FALSE)
if (length(gset) > 1) idx <- grep("GPL14951", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# make proper column names to match toptable
fvarLabels(gset) <- make.names(fvarLabels(gset))
# group names for all samples
gsms <- "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX00000001111111111"
sml <- c()
for (i in 1:nchar(gsms)) { sml[i] <- substr(gsms,i,i) }
# eliminate samples marked as "X"
sel <- which(sml != "X")
sml <- sml[sel]
gset <- gset[ ,sel]
# log2 transform
ex <- exprs(gset)
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))
LogC <- (qx[5] > 100) ||
(qx[6]-qx[1] > 50 && qx[2] > 0) ||
(qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)
if (LogC) { ex[which(ex <= 0)] <- NaN
exprs(gset) <- log2(ex) }
# set up the data and proceed with analysis
sml <- paste("G", sml, sep="")	# set group names
fl <- as.factor(sml)
gset$description <- fl
design <- model.matrix(~ description + 0, gset)
colnames(design) <- levels(fl)
fit <- lmFit(gset, design)
cont.matrix <- makeContrasts(G1-G0, levels=design)
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2, 0.01)
tT <- topTable(fit2, adjust="fdr", sort.by="B", number=500)
tT <- subset(tT, select=c("ID","adj.P.Val","P.Value","t","B","logFC","Transcript","Source","Search_Key","Source_Reference_ID","RefSeq_ID","GI","Accession","Protein_Product","Array_Address_Id","Probe_Start","SEQUENCE","Probe_Chr_Orientation","Probe_Coordinates","Definition","Ontology_Component","Ontology_Function","Synonyms","GB_ACC"))
write.table(tT, file=stdout(), row.names=F, sep="\t")
################################################################
#   Boxplot for selected GEO samples
library(Biobase)
library(GEOquery)
gset <- getGEO("GSE70422", GSEMatrix =TRUE, getGPL=FALSE)
if (length(gset) > 1) idx <- grep("GPL14951", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# group names for all samples in a series
gsms <- "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX00000001111111111"
sml <- c()
for (i in 1:nchar(gsms)) { sml[i] <- substr(gsms,i,i) }
sml <- paste("G", sml, sep="") # set group names
# eliminate samples marked as "X"
sel <- which(sml != "X")
sml <- sml[sel]
gset <- gset[ ,sel]
# order samples by group
ex <- exprs(gset)[ , order(sml)]
sml <- sml[order(sml)]
fl <- as.factor(sml)
labels <- c("SIDS_HEART_M","SIDS_HEART_C")
# set parameters and draw the plot
palette(c("#dfeaf4","#f4dfdf", "#AABBCC"))
dev.new(width=4+dim(gset)[[2]]/5, height=6)
par(mar=c(2+round(max(nchar(sampleNames(gset)))/2),4,2,1))
title <- paste ("GSE70422", '/', annotation(gset), " selected samples", sep ='')
boxplot(ex, boxwex=0.6, notch=T, main=title, outline=FALSE, las=2, col=fl)
legend("topleft", labels, fill=palette(), bty="n")
install.packages("xlsx")
library("xlsx")
write.xlsx(tT,"C:/Users/jrochest/Desktop/R_file_path/BMB_502_CLASS_PROJECT_SIDS/Heart_tT_all.xlsx")
write.xlsx(tT,"/Users/George1/Desktop/Bioinformatics Project")
write.xlsx(tT,"Macintosh HD/Users/George1/Desktop/Bioinformatics Project")
write.xlsx(tT,"MacintoshHD/Users/George1/Desktop/Bioinformatics Project")
write.xlsx(tT,"MacintoshHD/Users/George1/Desktop/Bioinformatics Project/Output.xlsx")
fl <- as.factor(sml)
install.packages("xlsx")
library("xlsx")
install.packages("xlsx, dependency=T")
library("xlsx,dependency=T")
install.packages("xlsx", dependency=T)
library("xlsx")
library("xlsx", dependency=T)
write.xlsx(tT,"Macintosh HD/Users/George1/Desktop/Bioinformatics Project/Output.xlsx")
library("xlsx", dependency=T)
View(tT)
write.xlsx(tT,"Macintosh HD/Users/George1/Desktop/Bioinformatics Project.xlsx")
library("xlsx", lib.loc="/Library/Frameworks/R.framework/Versions/3.5/Resources/library")
install.packages("xlsx")
install.packages("xlsx", dependency=T)
library("xlsx", dependency=T)
write.xlsx(tT,"Macintosh HD/Users/George1/Desktop/Bioinformatics Project.xlsx")
library("xlsx")
write.xlsx(tT,"Macintosh HD/Users/George1/Desktop/Bioinformatics Project.xlsx")
install.packages("xlsx")
library("xlsx")
install.packages('Biobase', version = "2.30.0")
install.packages("Biobase", version = "2.30.0")
install.packages("Biobase", version = "2.30.0")
install.packages("Biobase", version = "2.30.0")
install.packages("Biobase", version = "2.30.0")
install.packages("Biobase", version = "2.30.0")
install.packages("Biobase", version = "2.30.0")
install.packages("Biobase", version = "2.30.0")
install.packages("Biobase", version = "2.30.0")
install.packages('Biobase', version = "2.30.0")
install.packages('GEOquery', version = "2.40.0")
install.packages("Biobase", version = "2.30.0")
install.packages("dplyr")
install.packages('limma', version = "3.26.8")
install.packages("stringi")
library('stringi')
library('limma')
library('dplyr')
library('Biobase')
library('GEOquery)
install.packages("limma", version = "3.26.8")
library('stringi')
library('limma')
library('dplyr')
library('Biobase')
library('GEOquery')
library('limma')
gset <- getGEO("GSE70422", GSEMatrix =TRUE, AnnotGPL=FALSE)
if (length(gset) > 1) idx <- grep("GPL14951", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# make proper column names to match toptable
fvarLabels(gset) <- make.names(fvarLabels(gset))
# group names for all samples
gsms <- "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX00000001111111111"
sml <- c()
for (i in 1:nchar(gsms)) { sml[i] <- substr(gsms,i,i) }
# eliminate samples marked as "X"
sel <- which(sml != "X")
sml <- sml[sel]
gset <- gset[ ,sel]
# log2 transform
ex <- exprs(gset)
qx <- as.numeric(quantile(ex, c(0., 0.25, 0.5, 0.75, 0.99, 1.0), na.rm=T))
LogC <- (qx[5] > 100) ||
(qx[6]-qx[1] > 50 && qx[2] > 0) ||
(qx[2] > 0 && qx[2] < 1 && qx[4] > 1 && qx[4] < 2)
if (LogC) { ex[which(ex <= 0)] <- NaN
exprs(gset) <- log2(ex) }
# set up the data and proceed with analysis
sml <- paste("G", sml, sep="")	# set group names
fl <- as.factor(sml)
gset$description <- fl
design <- model.matrix(~ description + 0, gset)
colnames(design) <- levels(fl)
fit <- lmFit(gset, design)
cont.matrix <- makeContrasts(G1-G0, levels=design)
fit2 <- contrasts.fit(fit, cont.matrix)
fit2 <- eBayes(fit2, 0.01)
tT <- topTable(fit2, adjust="fdr", sort.by="B", number=500)
tT <- subset(tT, select=c("ID","adj.P.Val","P.Value","t","B","logFC","Transcript","Source","Search_Key","Source_Reference_ID","RefSeq_ID","GI","Accession","Protein_Product","Array_Address_Id","Probe_Start","SEQUENCE","Probe_Chr_Orientation","Probe_Coordinates","Definition","Ontology_Component","Ontology_Function","Synonyms","GB_ACC"))
write.table(tT, file=stdout(), row.names=F, sep="\t")
################################################################
#   Boxplot for selected GEO samples
library(Biobase)
library(GEOquery)
gset <- getGEO("GSE70422", GSEMatrix =TRUE, getGPL=FALSE)
if (length(gset) > 1) idx <- grep("GPL14951", attr(gset, "names")) else idx <- 1
gset <- gset[[idx]]
# group names for all samples in a series
gsms <- "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX00000001111111111"
sml <- c()
for (i in 1:nchar(gsms)) { sml[i] <- substr(gsms,i,i) }
sml <- paste("G", sml, sep="") # set group names
# eliminate samples marked as "X"
sel <- which(sml != "X")
sml <- sml[sel]
gset <- gset[ ,sel]
# order samples by group
ex <- exprs(gset)[ , order(sml)]
sml <- sml[order(sml)]
fl <- as.factor(sml)
labels <- c("SIDS_HEART_M","SIDS_HEART_C")
# set parameters and draw the plot
palette(c("#dfeaf4","#f4dfdf", "#AABBCC"))
dev.new(width=4+dim(gset)[[2]]/5, height=6)
par(mar=c(2+round(max(nchar(sampleNames(gset)))/2),4,2,1))
title <- paste ("GSE70422", '/', annotation(gset), " selected samples", sep ='')
boxplot(ex, boxwex=0.6, notch=T, main=title, outline=FALSE, las=2, col=fl)
legend("topleft", labels, fill=palette(), bty="n")
install.packages("xlsx", dependency=T)
library("xlsx")
write.xlsx(tT,"Macintosh HD/Users/George1/Desktop/Bioinformatics Project.xlsx")
setwd(/Users/George1/Documents/GitHub/george_murray/r_practice)
setwd(Users/George1/Documents/GitHub/george_murray/r_practice)
setwd(George1/Documents/GitHub/george_murray/r_practice)
setwd("/Users/George1/Documents/GitHub/george_murray")
setwd("/Users/George1/Documents/GitHub/george_murray/r_practice")
2+2
(1+3+2+12+8)/5
#finding distance between two points: (1,3) and (2,1)
((2-1)^2 + (1-3)^2)^(1/2)
x <- 2
y <- x^2 - 2*x + 1
y
x <- pi
sin(x)
cos(x)
sqrt(x)
log(x)
log(x, 10)
log(x, 2)
#combine
x <- c(74, 122, 235, 111, 292)
mean(x)
sum(x)/length(x)
head(x); tail(x)
head(x, 1)
#assigning variables
x <- 2
#combine
x <- c(74, 122, 235, 111, 292)
head(x, 3)
tail(x, 2)
x+x
sqrt(x)
x - mean(x)
#median
mean(x, trim=0.5)
median(x)
x
y<- c(TRUE, FALSE, TRUE, TRUE)
summary(x)
#combine
x <- c(74, 122, 235, 111, 292)
summary(y)
